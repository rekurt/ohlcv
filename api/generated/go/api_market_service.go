/*
 * PointPay.io Public Spot API (draft)
 *
 * OpenAPI Specifications for the PointPay.io Public Spot API
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"strings"

	"bitbucket.org/novatechnologies/ohlcv/domain"
)

// MarketApiService is a service that implements the logic for the MarketApiServicer
// This service should implement the business logic for every endpoint for the MarketApi API.
// Include any external packages or services that will be required by this service.
type MarketApiService struct {
	dealService domain.Service
}

// NewMarketApiService creates a default api service
func NewMarketApiService(dealService domain.Service) MarketApiServicer {
	return &MarketApiService{dealService: dealService}
}

// ApiV1TradesGet - Recent Trades List
func (s *MarketApiService) ApiV1TradesGet(
	ctx context.Context,
	symbol string,
	limit int32,
) (ImplResponse, error) {
	if strings.TrimSpace(symbol) == "" || limit <= 0 || limit >= 1000 {
		return Response(400, RespError{}), nil
	}

	trades, err := s.dealService.GetLastTrades(ctx, symbol, limit)
	if err != nil {
		return Response(500, RespError{}), nil
	}
	return Response(200, convert(trades)), nil
}

func convert(tr []domain.Deal) []Trade {
	trades := make([]Trade, len(tr))
	for i := range tr {

		trades[i] = Trade{
			Id:           tr[i].DealId,
			Price:        tr[i].Price.String(),
			Qty:          tr[i].Volume.String(),
			QuoteQty:     tr[i].Volume.String(),
			Time:         tr[i].Time.UnixMilli(),
			IsBuyerMaker: tr[i].IsBuyerMaker,
		}
	}
	return trades
}
