/*
 * PointPay.io Public Spot API (draft)
 *
 * OpenAPI Specifications for the PointPay.io Public Spot API
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type TickerAll struct {
	Id string `json:"id,omitempty"`

	Market string `json:"market,omitempty"`

	LastPrice string `json:"last_price,omitempty"`

	MakerFee string `json:"maker_fee,omitempty"`

	TakerFee string `json:"taker_fee,omitempty"`

	Precision int32 `json:"precision,omitempty"`

	BasePrecision int32 `json:"base_precision,omitempty"`

	QuotedPrecision int32 `json:"quoted_precision,omitempty"`

	DefaultLevel int32 `json:"default_level,omitempty"`

	OrderMinAmount string `json:"order_min_amount,omitempty"`

	OrderMinPrice string `json:"order_min_price,omitempty"`

	OrderMinSize string `json:"order_min_size,omitempty"`

	Var24hChange string `json:"24h_change,omitempty"`

	Var24hChangePercent string `json:"24h_change_percent,omitempty"`

	Var24hHigh string `json:"24h_high,omitempty"`

	Var24hLow string `json:"24h_low,omitempty"`

	Var24hVolume string `json:"24h_volume,omitempty"`

	BaseCurrency string `json:"base_currency,omitempty"`

	QuotedCurrency string `json:"quoted_currency,omitempty"`
}

// AssertTickerAllRequired checks if the required fields are not zero-ed
func AssertTickerAllRequired(obj TickerAll) error {
	return nil
}

// AssertRecurseTickerAllRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TickerAll (e.g. [][]TickerAll), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTickerAllRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTickerAll, ok := obj.(TickerAll)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTickerAllRequired(aTickerAll)
	})
}
