image: amazonlinux:2.0.20211005.0
clone:
  depth: 10

options:
  docker: true
  size: 2x

definitions:
  services:
    docker:
      memory: 7128

pipelines:
  branches:
    production:
      - step:
          name: prepare env
          script:
            - yum install -y gettext
            - export PATH=`pwd`:$PATH
            # Set environment variables
            - export BRANCH=`echo $BITBUCKET_BRANCH | sed 's/./\L&/g' | sed 's/[^a-zA-Z0-9-]/-/'`
            - export BITBUCKET_COMMIT_SHORT=`echo $BITBUCKET_COMMIT | cut -c1-7`
            - export VERSION=$BRANCH-$BITBUCKET_COMMIT_SHORT
            #          - export NAMESPACE=xch-$BRANCH
            - export NAMESPACE=xch-$BRANCH
            - export STAGE=Production # ICO-267
            - export LAST_BUILD_TIMESTAMP=`date +%s` # ICO-267
            - export KUBECONFIG=kubernetes/production-cluster-v2.pointpay.io.conf
            - export APP_DEBUG=true
            - export APP_ENV=production
            # Set services hostnames

            - export MONGODB_HOST=$MONGODB_HOST
            - export MONGODB_NAME=$MONGODB_NAME
            - export MONGODB_TIMEOUT=$MONGODB_TIMEOUT #second
            - export MONGODB_DEAL_COLLECTION_NAME=$MONGODB_DEAL_COLLECTION_NAME
            - export KAFKA_HOST=$KAFKA_HOST
            - export KAFKA_SUBSCRIBER_COUNT=$STAGE_KAFKA_SUBSCRIBER_COUNT

            - export LOG_LEVEL=$STAGE_LOG_LEVEL
            - export SERVICE_NAME="ohlcv"


            - declare -a CONFIG_FILES=("$KUBECONFIG" config/.env kubernetes/ohlcv.yaml)
            - for CONFIG_FILE in ${CONFIG_FILES[@]}; do envsubst < $CONFIG_FILE > /tmp/config && mv /tmp/config $CONFIG_FILE; done
            - cat kubernetes/ohlcv.yaml
            - export -p > global.env
          artifacts:
            - global.env
            - kubernetes/**
            - kubernetes/ohlcv.yaml
            - config/.env

      - step: &building
          name: building
          caches:
            - docker
          script:
            - source global.env
            - yum install -y make curl wget tar gzip git mercurial gcc awscli
            # install Golang
            #            - wget https://golang.org/dl/go1.17.linux-amd64.tar.gz
            #            - rm -rf /usr/local/go && tar -C /usr/local -xzf go1.17.linux-amd64.tar.gz
            #            - export PATH=/usr/local/go/bin:$PATH
            # make sure SSH is used instead of HTTPS when cloning dependencies
            #            - git config --global --add url."git@bitbucket.org:".insteadOf "https://bitbucket.org/"
            #            - export GOPRIVATE='bitbucket.org'
            #            - export PATH=/root/go/bin:$PATH
            # Add bitbucket.org fingertip to known hosts so `git clone` and similar commands won't fail.
            #            - ssh-keyscan -t rsa bitbucket.org > /tmp/my_known_hosts
            #            - cat /tmp/my_known_hosts >> ~/.ssh/known_hosts
            # Build the app.
            - export BUILD_VERSION=`git describe --tags --abbrev=0`
            - export BUILD_DATE=`date +"%F %T %Z"`
            - export BUILD_COMMIT=`git rev-parse HEAD`
            - export TAG=stage-v$BITBUCKET_BUILD_NUMBER
            # Build the Docker image.
            - docker build -t ohlcv:last .
            - docker tag ohlcv:last $ECR_PATH:ohlcv-$VERSION
            - eval $(aws ecr get-login --no-include-email)
            - docker push $ECR_PATH:ohlcv-$VERSION

      - step: &deploy_k8s
          name: deploy k8s
          script:
            - curl -O https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.10/2019-08-14/bin/linux/amd64/kubectl
            - chmod +x ./kubectl
            - source global.env
            - export -p
            - cat kubernetes/ohlcv.yaml
            - ./kubectl apply -f kubernetes/ohlcv.yaml -n $NAMESPACE

    master:
      - step:
          name: prepare env
          script:
            - yum install -y gettext
            - export PATH=`pwd`:$PATH
            # Set environment variables
            - export BRANCH=`echo $BITBUCKET_BRANCH | sed 's/./\L&/g' | sed 's/[^a-zA-Z0-9-]/-/'`
            - export BITBUCKET_COMMIT_SHORT=`echo $BITBUCKET_COMMIT | cut -c1-7`
            - export VERSION=$BRANCH-$BITBUCKET_COMMIT_SHORT
            #          - export NAMESPACE=xch-$BRANCH
            - export NAMESPACE=xch-master
            - export STAGE=Staging # ICO-267
            - export LAST_BUILD_TIMESTAMP=`date +%s` # ICO-267
            - export KUBECONFIG=kubernetes/staging-cluster.pointpay.io.conf

            - export APP_DEBUG=true
            - export APP_ENV=staging
            # Set services hostnames


            - export MONGODB_HOST=$STAGING_MONGODB_HOST
            - export MONGODB_NAME=$MONGODB_NAME
            - export MONGODB_TIMEOUT=$MONGODB_TIMEOUT #second
            - export MONGODB_DEAL_COLLECTION_NAME=$MONGODB_DEAL_COLLECTION_NAME
            - export KAFKA_SUBSCRIBER_COUNT=$STAGE_KAFKA_SUBSCRIBER_COUNT
            - export KAFKA_HOST=$STAGING_KAFKA_HOST
            - export KAFKA_SSL="1"

            - export LOG_LEVEL=$STAGE_LOG_LEVEL
            - export SERVICE_NAME="ohlcv"


            - declare -a CONFIG_FILES=("$KUBECONFIG" config/.env kubernetes/ohlcv.yaml)
            - for CONFIG_FILE in ${CONFIG_FILES[@]}; do envsubst < $CONFIG_FILE > /tmp/config && mv /tmp/config $CONFIG_FILE; done
            - cat kubernetes/ohlcv.yaml
            - export -p > global.env
          artifacts:
            - global.env
            - kubernetes/**
            - kubernetes/ohlcv.yaml
            - config/.env

      - step: *building
      - step: *deploy_k8s

    master2:
      - step:
          name: prepare env
          script:
            - yum install -y gettext
            - export PATH=`pwd`:$PATH
            # Set environment variables
            - export BRANCH=`echo $BITBUCKET_BRANCH | sed 's/./\L&/g' | sed 's/[^a-zA-Z0-9-]/-/'`
            - export BITBUCKET_COMMIT_SHORT=`echo $BITBUCKET_COMMIT | cut -c1-7`
            - export VERSION=$BRANCH-$BITBUCKET_COMMIT_SHORT
            #          - export NAMESPACE=xch-$BRANCH
            - export NAMESPACE=xch-master2
            - export STAGE=Staging # ICO-267
            - export LAST_BUILD_TIMESTAMP=`date +%s` # ICO-267
            - export KUBECONFIG=kubernetes/staging-cluster.pointpay.io.conf
            - export APP_DEBUG=true
            - export APP_ENV=staging
            # Set services hostnames

            - export MONGODB_HOST=$STAGING_MONGODB_HOST
            - export MONGODB_NAME=$MONGODB_NAME
            - export MONGODB_TIMEOUT=$MONGODB_TIMEOUT #second
            - export MONGODB_DEAL_COLLECTION_NAME=$MONGODB_DEAL_COLLECTION_NAME
            - export KAFKA_SUBSCRIBER_COUNT=$STAGE_KAFKA_SUBSCRIBER_COUNT
            - export KAFKA_HOST=$STAGING_KAFKA_HOST
            - export KAFKA_SSL="1"

            - export LOG_LEVEL=$STAGE_LOG_LEVEL
            - export SERVICE_NAME="ohlcv"


            - declare -a CONFIG_FILES=("$KUBECONFIG" config/.env kubernetes/ohlcv.yaml)
            - for CONFIG_FILE in ${CONFIG_FILES[@]}; do envsubst < $CONFIG_FILE > /tmp/config && mv /tmp/config $CONFIG_FILE; done
            - cat kubernetes/ohlcv.yaml
            - export -p > global.env
          artifacts:
            - global.env
            - kubernetes/**
            - kubernetes/ohlcv.yaml
            - config/.env

      - step: *building

      - step: *deploy_k8s

  default:
    # - step:
    #     name: prepare env
    #     script:
    #       - echo "Staging pipeline is not implemented yet."
    #       - exit 1
      - step:
          name: prepare env
          script:
            - yum install -y gettext
            - export PATH=`pwd`:$PATH
            # Set environment variables
            - export BRANCH=`echo $BITBUCKET_BRANCH | sed 's/./\L&/g' | sed 's/[^a-zA-Z0-9-]/-/'`
            - export BITBUCKET_COMMIT_SHORT=`echo $BITBUCKET_COMMIT | cut -c1-7`
            - export VERSION=$BRANCH-$BITBUCKET_COMMIT_SHORT
            - export NAMESPACE=xch-$BRANCH
            #- export NAMESPACE=xch-master2
            - export STAGE=Staging # ICO-267
            - export LAST_BUILD_TIMESTAMP=`date +%s` # ICO-267
            - export KUBECONFIG=kubernetes/staging-cluster.pointpay.io.conf
            - export APP_DEBUG=true
            - export APP_ENV=staging
            # Set services hostnames

            - export MONGODB_HOST=$STAGING_MONGODB_HOST
            - export MONGODB_NAME=$MONGODB_NAME
            - export MONGODB_TIMEOUT=$MONGODB_TIMEOUT #second
            - export MONGODB_DEAL_COLLECTION_NAME=$MONGODB_DEAL_COLLECTION_NAME
            - export KAFKA_SUBSCRIBER_COUNT=$STAGE_KAFKA_SUBSCRIBER_COUNT
            - export KAFKA_HOST=$STAGING_KAFKA_HOST
            - export KAFKA_SSL="1"

            - export LOG_LEVEL=$STAGE_LOG_LEVEL
            - export SERVICE_NAME="ohlcv"


            - declare -a CONFIG_FILES=("$KUBECONFIG" config/.env kubernetes/ohlcv.yaml)
            - for CONFIG_FILE in ${CONFIG_FILES[@]}; do envsubst < $CONFIG_FILE > /tmp/config && mv /tmp/config $CONFIG_FILE; done
            - cat kubernetes/ohlcv.yaml
            - export -p > global.env
          artifacts:
            - global.env
            - kubernetes/**
            - kubernetes/ohlcv.yaml
            - config/.env

      - step: *building

      - step: *deploy_k8s
