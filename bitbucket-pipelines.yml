image: amazonlinux:2.0.20211005.0
clone:
  depth: 10

options:
  docker: true
  size: 2x

definitions:
  services:
    docker:
      memory: 7128

pipelines:
  branches:
    production:
      - step:
          name: prepare env
          script:
            - yum install -y gettext
            - export PATH=`pwd`:$PATH
            # Set environment variables
            - export BRANCH=`echo $BITBUCKET_BRANCH | sed 's/./\L&/g' | sed 's/[^a-zA-Z0-9-]/-/'`
            - export BITBUCKET_COMMIT_SHORT=`echo $BITBUCKET_COMMIT | cut -c1-7`
            - export VERSION=$BRANCH-$BITBUCKET_COMMIT_SHORT
            #          - export NAMESPACE=xch-$BRANCH
            - export NAMESPACE=xch-$BRANCH
            - export STAGE=Production # ICO-267
            - export LAST_BUILD_TIMESTAMP=`date +%s` # ICO-267
            - export KUBECONFIG=kubernetes/production-cluster-v2.pointpay.io.conf
            - export APP_DEBUG=true
            - export APP_ENV=production
            # Set services hostnames

            - export MONGODB_HOST=$MONGODB_HOST
            - export MONGODB_NAME=$MONGODB_NAME
            - export MONGODB_TIMEOUT=$MONGODB_TIMEOUT #second
            - export MONGODB_DEAL_COLLECTION_NAME=$MONGODB_DEAL_COLLECTION_NAME
            - export MONGODB_USER=$MONGODB_USER
            - export MONGODB_PASSWORD=$MONGODB_PASSWORD
            - export MONGODB_ROOT_PASSWORD=$MONGODB_ROOT_PASSWORD
            - export KAFKA_HOST=$KAFKA_HOST
            - export KAFKA_SUBSCRIBER_COUNT=$STAGE_KAFKA_SUBSCRIBER_COUNT

            - export LOG_LEVEL=$STAGE_LOG_LEVEL
            - export SERVICE_NAME="ohlcv"


            - declare -a CONFIG_FILES=("$KUBECONFIG" config/.env kubernetes/ohlcv.yaml)
            - for CONFIG_FILE in ${CONFIG_FILES[@]}; do envsubst < $CONFIG_FILE > /tmp/config && mv /tmp/config $CONFIG_FILE; done
            - cat kubernetes/ohlcv.yaml
            - export -p > global.env
          artifacts:
            - global.env
            - kubernetes/**
            - kubernetes/ohlcv.yaml
            - config/.env

      - step: &building
          name: build-app
          image: golang:1.17.2-alpine
          script:
            - apk add git libc-dev gcc openssh
            - ls -la ~/.ssh/
            - cat ~/.ssh/config
            - git config --global url."git@bitbucket.org:".insteadOf "https://bitbucket.org/"
            - export GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
            - cat ~/.gitconfig
            - export CGO_ENABLED=1
            - export GO111MODULE=on
            - go mod tidy -v
            - go build -tags=jsoniter -a -o ohlcv cmd/main.go
          artifacts:
            - ohlcv

      - step: &packing_docker
          name: build-docker-image
          script:
            - yum install -y awscli
            - docker build -f Dockerfile-test -t ohlcv:last  .
            - docker tag ohlcv:last $ECR_PATH:ohlcv-$VERSION
            - eval $(aws ecr get-login --no-include-email)
            - docker push $ECR_PATH:ohlcv-$VERSION

      - step: &deploy_k8s
          name: deploy k8s
          script:
            - curl -O https://get.helm.sh/helm-v3.7.1-linux-amd64.tar.gz && yum install -y tar gzip && tar -zxvf helm-v3.7.1-linux-amd64.tar.gz && mv ./linux-amd64/helm ./helm && chmod +x ./helm && rm -rf linux-amd64 && rm helm-v3.7.1-linux-amd64.tar.gz;
            - curl -O https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.10/2019-08-14/bin/linux/amd64/kubectl
            - chmod +x ./kubectl
            - source global.env

            - export -p
            - cat kubernetes/ohlcv.yaml
            - ./kubectl apply -f kubernetes/ohlcv.yaml -n $NAMESPACE
            - ./helm repo add bitnami https://charts.bitnami.com/bitnami && ./helm repo update;
            - ./helm upgrade --install mongodb bitnami/mongodb --version 11.1.3 -n $NAMESPACE --set metrics.enabled=true auth.rootPassword=${MONGODB_ROOT_PASSWORD},auth.username=${MONGODB_USER},auth.password=${MONGODB_PASSWORD},auth.database=${MONGODB_NAME};

    master:
      - step:
          name: prepare env
          script:
            - yum install -y gettext
            - export PATH=`pwd`:$PATH
            # Set environment variables
            - export BRANCH=`echo $BITBUCKET_BRANCH | sed 's/./\L&/g' | sed 's/[^a-zA-Z0-9-]/-/'`
            - export BITBUCKET_COMMIT_SHORT=`echo $BITBUCKET_COMMIT | cut -c1-7`
            - export VERSION=$BRANCH-$BITBUCKET_COMMIT_SHORT
            #          - export NAMESPACE=xch-$BRANCH
            - export NAMESPACE=xch-master
            - export STAGE=Staging # ICO-267
            - export LAST_BUILD_TIMESTAMP=`date +%s` # ICO-267
            - export KUBECONFIG=kubernetes/staging-cluster.pointpay.io.conf

            - export APP_DEBUG=true
            - export APP_ENV=staging
            # Set services hostnames


            - export MONGODB_HOST=$STAGING_MONGODB_HOST
            - export MONGODB_NAME=$MONGODB_NAME
            - export MONGODB_TIMEOUT=$MONGODB_TIMEOUT #second
            - export MONGODB_DEAL_COLLECTION_NAME=$MONGODB_DEAL_COLLECTION_NAME
            - export MONGODB_USER=$STAGE_MONGODB_USER
            - export MONGODB_PASSWORD=$STAGE_MONGODB_PASSWORD
            - export MONGODB_ROOT_PASSWORD=$STAGE_MONGODB_ROOT_PASSWORD
            - export KAFKA_SUBSCRIBER_COUNT=$STAGE_KAFKA_SUBSCRIBER_COUNT
            - export KAFKA_HOST=$STAGING_KAFKA_HOST
            - export KAFKA_SSL="1"

            - export LOG_LEVEL=$STAGE_LOG_LEVEL
            - export SERVICE_NAME="ohlcv"


            - declare -a CONFIG_FILES=("$KUBECONFIG" config/.env kubernetes/ohlcv.yaml)
            - for CONFIG_FILE in ${CONFIG_FILES[@]}; do envsubst < $CONFIG_FILE > /tmp/config && mv /tmp/config $CONFIG_FILE; done
            - cat kubernetes/ohlcv.yaml
            - export -p > global.env
          artifacts:
            - global.env
            - kubernetes/**
            - kubernetes/ohlcv.yaml
            - config/.env

      - step: *building
      - step: *packing_docker
      - step: *deploy_k8s

    master2:
      - step:
          name: prepare env
          script:
            - yum install -y gettext
            - export PATH=`pwd`:$PATH
            # Set environment variables
            - export BRANCH=`echo $BITBUCKET_BRANCH | sed 's/./\L&/g' | sed 's/[^a-zA-Z0-9-]/-/'`
            - export BITBUCKET_COMMIT_SHORT=`echo $BITBUCKET_COMMIT | cut -c1-7`
            - export VERSION=$BRANCH-$BITBUCKET_COMMIT_SHORT
            #          - export NAMESPACE=xch-$BRANCH
            - export NAMESPACE=xch-master2
            - export STAGE=Staging # ICO-267
            - export LAST_BUILD_TIMESTAMP=`date +%s` # ICO-267
            - export KUBECONFIG=kubernetes/staging-cluster.pointpay.io.conf
            - export APP_DEBUG=true
            - export APP_ENV=staging
            # Set services hostnames

            - export MONGODB_HOST=$STAGING_MONGODB_HOST
            - export MONGODB_NAME=$MONGODB_NAME
            - export MONGODB_TIMEOUT=$MONGODB_TIMEOUT #second
            - export MONGODB_DEAL_COLLECTION_NAME=$MONGODB_DEAL_COLLECTION_NAME
            - export MONGODB_USER=$STAGE_MONGODB_USER
            - export MONGODB_PASSWORD=$STAGE_MONGODB_PASSWORD
            - export MONGODB_ROOT_PASSWORD=$STAGE_MONGODB_ROOT_PASSWORD
            - export KAFKA_SUBSCRIBER_COUNT=$STAGE_KAFKA_SUBSCRIBER_COUNT
            - export KAFKA_HOST=$STAGING_KAFKA_HOST
            - export KAFKA_SSL="1"

            - export LOG_LEVEL=$STAGE_LOG_LEVEL
            - export SERVICE_NAME="ohlcv"


            - declare -a CONFIG_FILES=("$KUBECONFIG" config/.env kubernetes/ohlcv.yaml)
            - for CONFIG_FILE in ${CONFIG_FILES[@]}; do envsubst < $CONFIG_FILE > /tmp/config && mv /tmp/config $CONFIG_FILE; done
            - cat kubernetes/ohlcv.yaml
            - export -p > global.env
          artifacts:
            - global.env
            - kubernetes/**
            - kubernetes/ohlcv.yaml
            - config/.env

      - step: *building
      - step: *packing_docker
      - step: *deploy_k8s

  default:
    # - step:
    #     name: prepare env
    #     script:
    #       - echo "Staging pipeline is not implemented yet."
    #       - exit 1
      - step:
          name: prepare env
          script:
            - yum install -y gettext
            - export PATH=`pwd`:$PATH
            # Set environment variables
            - export BRANCH=`echo $BITBUCKET_BRANCH | sed 's/./\L&/g' | sed 's/[^a-zA-Z0-9-]/-/'`
            - export BITBUCKET_COMMIT_SHORT=`echo $BITBUCKET_COMMIT | cut -c1-7`
            - export VERSION=$BRANCH-$BITBUCKET_COMMIT_SHORT
            - export NAMESPACE=xch-test
            #- export NAMESPACE=xch-master2
            - export STAGE=Staging # ICO-267
            - export LAST_BUILD_TIMESTAMP=`date +%s` # ICO-267
            - export KUBECONFIG=kubernetes/staging-cluster.pointpay.io.conf
            - export APP_DEBUG=true
            - export APP_ENV=staging
            # Set services hostnames

            - export MONGODB_HOST=$STAGING_MONGODB_HOST
            - export MONGODB_NAME=$MONGODB_NAME
            - export MONGODB_TIMEOUT=$MONGODB_TIMEOUT #second
            - export MONGODB_DEAL_COLLECTION_NAME=$MONGODB_DEAL_COLLECTION_NAME
            - export MONGODB_USER=$STAGE_MONGODB_USER
            - export MONGODB_PASSWORD=$STAGE_MONGODB_PASSWORD
            - export MONGODB_ROOT_PASSWORD=$STAGE_MONGODB_ROOT_PASSWORD
            - export KAFKA_SUBSCRIBER_COUNT=$STAGE_KAFKA_SUBSCRIBER_COUNT
            - export KAFKA_HOST=$STAGING_KAFKA_HOST
            - export KAFKA_SSL="1"

            - export LOG_LEVEL=$STAGE_LOG_LEVEL
            - export SERVICE_NAME="ohlcv"


            - declare -a CONFIG_FILES=("$KUBECONFIG" config/.env kubernetes/ohlcv.yaml)
            - for CONFIG_FILE in ${CONFIG_FILES[@]}; do envsubst < $CONFIG_FILE > /tmp/config && mv /tmp/config $CONFIG_FILE; done
            - cat kubernetes/ohlcv.yaml
            - export -p > global.env
          artifacts:
            - global.env
            - kubernetes/**
            - kubernetes/ohlcv.yaml
            - config/.env


      - step: *building
      - step: *packing_docker
      - step: *deploy_k8s
