syntax = "proto3";
option go_package = "./ohlcv";
import "google/protobuf/timestamp.proto";

package ohlcv;

service OHLCVService {
  rpc GenerateMinutesCandle (GenerateMinuteCandlesRequest) returns (GenerateMinuteCandlesResponse);
  rpc GenerateMinutesKlines (GenerateMinuteKlinesRequest) returns (GenerateMinuteKlinesResponse);
  rpc SubscribeDeals(SubscribeDealsRequest) returns (stream SubscribeDealsResponse);
  rpc GetLastTrades (GetLastTradesRequest) returns (GetLastTradesResponse);
  rpc GetTicker (GetTickerRequest) returns (GetTickerResponse);
}

message SubscribeDealsRequest{

}
message SubscribeDealsResponse{
  google.protobuf.Timestamp time = 1;
  string price = 2;
  string volume = 3;
  string symbol = 4;
  string dealId = 5;
  bool isBuyerMaker = 6;
}

message GenerateMinuteCandlesRequest {
  google.protobuf.Timestamp from = 1;
  google.protobuf.Timestamp to = 2;
}
message Candle {
  google.protobuf.Timestamp openTime = 1;
  string open = 2;
  string high = 3;
  string low = 4;
  string close = 5;
  string volume = 6;
  string symbol = 7;
}
message GenerateMinuteCandlesResponse {
  repeated Candle candles = 1;
}

message GenerateMinuteKlinesRequest {
  google.protobuf.Timestamp from = 1;
  google.protobuf.Timestamp to = 2;
}

message Kline {
  google.protobuf.Timestamp openTime = 1;
  string open = 2;
  string high = 3;
  string low = 4;
  string close = 5;
  string volume = 6;
  google.protobuf.Timestamp closeTime = 7;
  string quotes = 8;
  string takerAssets = 9;
  string takerQuotes = 10;
  int32 trades = 11;
  string symbol = 12;
  google.protobuf.Timestamp first = 13;
  google.protobuf.Timestamp last = 14;
}

message GenerateMinuteKlinesResponse {
  repeated Kline klines = 1;
}

message GetLastTradesRequest {
  string symbol = 1;
  int32 limit = 2;
}

message Trade {
  string id = 1;
  string price = 2;
  string qty = 3;
  string quoteQty = 4;
  int64 time = 5;
  bool isBuyerMaker = 6;
  bool isBestMatch = 7;
}

message GetLastTradesResponse {
  repeated Trade trades = 1 ;
}

message Ticker {
  string Symbol = 1;
  string PriceChange = 2;
  string PriceChangePercent = 3;
  string WeightedAvgPrice = 4;
  string PrevClosePrice = 5;
  string LastPrice = 6;
  string LastQty = 7;
  string BidPrice = 8;
  string BidQty = 9;
  string AskPrice = 10;
  string AskQty = 11;
  string OpenPrice = 12;
  string HighPrice = 13;
  string LowPrice = 14;
  string Volume = 15;
  string QuoteVolume = 16;
  int64 OpenTime = 17;
  int64 CloseTime = 18;
  string FirstId = 19;
  string LastId = 20;
  int32 Count = 21;
}

message GetTickerResponse{
  repeated Ticker tickers = 1 ;
}

message GetTickerRequest{
  string symbol = 1;
}
