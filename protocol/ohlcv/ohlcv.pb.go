// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: ohlcv.proto

package ohlcv

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeDealsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeDealsRequest) Reset() {
	*x = SubscribeDealsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeDealsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeDealsRequest) ProtoMessage() {}

func (x *SubscribeDealsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeDealsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeDealsRequest) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{0}
}

type SubscribeDealsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Price        string                 `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	Volume       string                 `protobuf:"bytes,3,opt,name=volume,proto3" json:"volume,omitempty"`
	Symbol       string                 `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	DealId       string                 `protobuf:"bytes,5,opt,name=dealId,proto3" json:"dealId,omitempty"`
	IsBuyerMaker bool                   `protobuf:"varint,6,opt,name=isBuyerMaker,proto3" json:"isBuyerMaker,omitempty"`
}

func (x *SubscribeDealsResponse) Reset() {
	*x = SubscribeDealsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeDealsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeDealsResponse) ProtoMessage() {}

func (x *SubscribeDealsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeDealsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeDealsResponse) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeDealsResponse) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *SubscribeDealsResponse) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *SubscribeDealsResponse) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *SubscribeDealsResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SubscribeDealsResponse) GetDealId() string {
	if x != nil {
		return x.DealId
	}
	return ""
}

func (x *SubscribeDealsResponse) GetIsBuyerMaker() bool {
	if x != nil {
		return x.IsBuyerMaker
	}
	return false
}

type GenerateMinuteCandlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GenerateMinuteCandlesRequest) Reset() {
	*x = GenerateMinuteCandlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMinuteCandlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMinuteCandlesRequest) ProtoMessage() {}

func (x *GenerateMinuteCandlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMinuteCandlesRequest.ProtoReflect.Descriptor instead.
func (*GenerateMinuteCandlesRequest) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{2}
}

func (x *GenerateMinuteCandlesRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GenerateMinuteCandlesRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type Candle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=openTime,proto3" json:"openTime,omitempty"`
	Open     string                 `protobuf:"bytes,2,opt,name=open,proto3" json:"open,omitempty"`
	High     string                 `protobuf:"bytes,3,opt,name=high,proto3" json:"high,omitempty"`
	Low      string                 `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	Close    string                 `protobuf:"bytes,5,opt,name=close,proto3" json:"close,omitempty"`
	Volume   string                 `protobuf:"bytes,6,opt,name=volume,proto3" json:"volume,omitempty"`
	Symbol   string                 `protobuf:"bytes,7,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *Candle) Reset() {
	*x = Candle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Candle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candle) ProtoMessage() {}

func (x *Candle) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candle.ProtoReflect.Descriptor instead.
func (*Candle) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{3}
}

func (x *Candle) GetOpenTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenTime
	}
	return nil
}

func (x *Candle) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *Candle) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *Candle) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *Candle) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *Candle) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *Candle) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type GenerateMinuteCandlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candles []*Candle `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
}

func (x *GenerateMinuteCandlesResponse) Reset() {
	*x = GenerateMinuteCandlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMinuteCandlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMinuteCandlesResponse) ProtoMessage() {}

func (x *GenerateMinuteCandlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMinuteCandlesResponse.ProtoReflect.Descriptor instead.
func (*GenerateMinuteCandlesResponse) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateMinuteCandlesResponse) GetCandles() []*Candle {
	if x != nil {
		return x.Candles
	}
	return nil
}

type GenerateMinuteKlinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GenerateMinuteKlinesRequest) Reset() {
	*x = GenerateMinuteKlinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMinuteKlinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMinuteKlinesRequest) ProtoMessage() {}

func (x *GenerateMinuteKlinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMinuteKlinesRequest.ProtoReflect.Descriptor instead.
func (*GenerateMinuteKlinesRequest) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateMinuteKlinesRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GenerateMinuteKlinesRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type Kline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenTime    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=openTime,proto3" json:"openTime,omitempty"`
	Open        string                 `protobuf:"bytes,2,opt,name=open,proto3" json:"open,omitempty"`
	High        string                 `protobuf:"bytes,3,opt,name=high,proto3" json:"high,omitempty"`
	Low         string                 `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	Close       string                 `protobuf:"bytes,5,opt,name=close,proto3" json:"close,omitempty"`
	Volume      string                 `protobuf:"bytes,6,opt,name=volume,proto3" json:"volume,omitempty"`
	CloseTime   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=closeTime,proto3" json:"closeTime,omitempty"`
	Quotes      string                 `protobuf:"bytes,8,opt,name=quotes,proto3" json:"quotes,omitempty"`
	TakerAssets string                 `protobuf:"bytes,9,opt,name=takerAssets,proto3" json:"takerAssets,omitempty"`
	TakerQuotes string                 `protobuf:"bytes,10,opt,name=takerQuotes,proto3" json:"takerQuotes,omitempty"`
	Trades      int32                  `protobuf:"varint,11,opt,name=trades,proto3" json:"trades,omitempty"`
	Symbol      string                 `protobuf:"bytes,12,opt,name=symbol,proto3" json:"symbol,omitempty"`
	First       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=first,proto3" json:"first,omitempty"`
	Last        *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=last,proto3" json:"last,omitempty"`
}

func (x *Kline) Reset() {
	*x = Kline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kline) ProtoMessage() {}

func (x *Kline) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kline.ProtoReflect.Descriptor instead.
func (*Kline) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{6}
}

func (x *Kline) GetOpenTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenTime
	}
	return nil
}

func (x *Kline) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *Kline) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *Kline) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *Kline) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *Kline) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *Kline) GetCloseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseTime
	}
	return nil
}

func (x *Kline) GetQuotes() string {
	if x != nil {
		return x.Quotes
	}
	return ""
}

func (x *Kline) GetTakerAssets() string {
	if x != nil {
		return x.TakerAssets
	}
	return ""
}

func (x *Kline) GetTakerQuotes() string {
	if x != nil {
		return x.TakerQuotes
	}
	return ""
}

func (x *Kline) GetTrades() int32 {
	if x != nil {
		return x.Trades
	}
	return 0
}

func (x *Kline) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Kline) GetFirst() *timestamppb.Timestamp {
	if x != nil {
		return x.First
	}
	return nil
}

func (x *Kline) GetLast() *timestamppb.Timestamp {
	if x != nil {
		return x.Last
	}
	return nil
}

type GenerateMinuteKlinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Klines []*Kline `protobuf:"bytes,1,rep,name=klines,proto3" json:"klines,omitempty"`
}

func (x *GenerateMinuteKlinesResponse) Reset() {
	*x = GenerateMinuteKlinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMinuteKlinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMinuteKlinesResponse) ProtoMessage() {}

func (x *GenerateMinuteKlinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMinuteKlinesResponse.ProtoReflect.Descriptor instead.
func (*GenerateMinuteKlinesResponse) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{7}
}

func (x *GenerateMinuteKlinesResponse) GetKlines() []*Kline {
	if x != nil {
		return x.Klines
	}
	return nil
}

type GetLastTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Limit  int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetLastTradesRequest) Reset() {
	*x = GetLastTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastTradesRequest) ProtoMessage() {}

func (x *GetLastTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastTradesRequest.ProtoReflect.Descriptor instead.
func (*GetLastTradesRequest) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{8}
}

func (x *GetLastTradesRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetLastTradesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Price        string `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	Qty          string `protobuf:"bytes,3,opt,name=qty,proto3" json:"qty,omitempty"`
	QuoteQty     string `protobuf:"bytes,4,opt,name=quoteQty,proto3" json:"quoteQty,omitempty"`
	Time         int64  `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
	IsBuyerMaker bool   `protobuf:"varint,6,opt,name=isBuyerMaker,proto3" json:"isBuyerMaker,omitempty"`
	IsBestMatch  bool   `protobuf:"varint,7,opt,name=isBestMatch,proto3" json:"isBestMatch,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{9}
}

func (x *Trade) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trade) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Trade) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *Trade) GetQuoteQty() string {
	if x != nil {
		return x.QuoteQty
	}
	return ""
}

func (x *Trade) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Trade) GetIsBuyerMaker() bool {
	if x != nil {
		return x.IsBuyerMaker
	}
	return false
}

func (x *Trade) GetIsBestMatch() bool {
	if x != nil {
		return x.IsBestMatch
	}
	return false
}

type GetLastTradesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trades []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
}

func (x *GetLastTradesResponse) Reset() {
	*x = GetLastTradesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastTradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastTradesResponse) ProtoMessage() {}

func (x *GetLastTradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastTradesResponse.ProtoReflect.Descriptor instead.
func (*GetLastTradesResponse) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{10}
}

func (x *GetLastTradesResponse) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

type Ticker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol             string `protobuf:"bytes,1,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	PriceChange        string `protobuf:"bytes,2,opt,name=PriceChange,proto3" json:"PriceChange,omitempty"`
	PriceChangePercent string `protobuf:"bytes,3,opt,name=PriceChangePercent,proto3" json:"PriceChangePercent,omitempty"`
	WeightedAvgPrice   string `protobuf:"bytes,4,opt,name=WeightedAvgPrice,proto3" json:"WeightedAvgPrice,omitempty"`
	PrevClosePrice     string `protobuf:"bytes,5,opt,name=PrevClosePrice,proto3" json:"PrevClosePrice,omitempty"`
	LastPrice          string `protobuf:"bytes,6,opt,name=LastPrice,proto3" json:"LastPrice,omitempty"`
	LastQty            string `protobuf:"bytes,7,opt,name=LastQty,proto3" json:"LastQty,omitempty"`
	BidPrice           string `protobuf:"bytes,8,opt,name=BidPrice,proto3" json:"BidPrice,omitempty"`
	BidQty             string `protobuf:"bytes,9,opt,name=BidQty,proto3" json:"BidQty,omitempty"`
	AskPrice           string `protobuf:"bytes,10,opt,name=AskPrice,proto3" json:"AskPrice,omitempty"`
	AskQty             string `protobuf:"bytes,11,opt,name=AskQty,proto3" json:"AskQty,omitempty"`
	OpenPrice          string `protobuf:"bytes,12,opt,name=OpenPrice,proto3" json:"OpenPrice,omitempty"`
	HighPrice          string `protobuf:"bytes,13,opt,name=HighPrice,proto3" json:"HighPrice,omitempty"`
	LowPrice           string `protobuf:"bytes,14,opt,name=LowPrice,proto3" json:"LowPrice,omitempty"`
	Volume             string `protobuf:"bytes,15,opt,name=Volume,proto3" json:"Volume,omitempty"`
	QuoteVolume        string `protobuf:"bytes,16,opt,name=QuoteVolume,proto3" json:"QuoteVolume,omitempty"`
	OpenTime           int64  `protobuf:"varint,17,opt,name=OpenTime,proto3" json:"OpenTime,omitempty"`
	CloseTime          int64  `protobuf:"varint,18,opt,name=CloseTime,proto3" json:"CloseTime,omitempty"`
	FirstId            string `protobuf:"bytes,19,opt,name=FirstId,proto3" json:"FirstId,omitempty"`
	LastId             string `protobuf:"bytes,20,opt,name=LastId,proto3" json:"LastId,omitempty"`
	Count              int32  `protobuf:"varint,21,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *Ticker) Reset() {
	*x = Ticker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticker) ProtoMessage() {}

func (x *Ticker) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticker.ProtoReflect.Descriptor instead.
func (*Ticker) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{11}
}

func (x *Ticker) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Ticker) GetPriceChange() string {
	if x != nil {
		return x.PriceChange
	}
	return ""
}

func (x *Ticker) GetPriceChangePercent() string {
	if x != nil {
		return x.PriceChangePercent
	}
	return ""
}

func (x *Ticker) GetWeightedAvgPrice() string {
	if x != nil {
		return x.WeightedAvgPrice
	}
	return ""
}

func (x *Ticker) GetPrevClosePrice() string {
	if x != nil {
		return x.PrevClosePrice
	}
	return ""
}

func (x *Ticker) GetLastPrice() string {
	if x != nil {
		return x.LastPrice
	}
	return ""
}

func (x *Ticker) GetLastQty() string {
	if x != nil {
		return x.LastQty
	}
	return ""
}

func (x *Ticker) GetBidPrice() string {
	if x != nil {
		return x.BidPrice
	}
	return ""
}

func (x *Ticker) GetBidQty() string {
	if x != nil {
		return x.BidQty
	}
	return ""
}

func (x *Ticker) GetAskPrice() string {
	if x != nil {
		return x.AskPrice
	}
	return ""
}

func (x *Ticker) GetAskQty() string {
	if x != nil {
		return x.AskQty
	}
	return ""
}

func (x *Ticker) GetOpenPrice() string {
	if x != nil {
		return x.OpenPrice
	}
	return ""
}

func (x *Ticker) GetHighPrice() string {
	if x != nil {
		return x.HighPrice
	}
	return ""
}

func (x *Ticker) GetLowPrice() string {
	if x != nil {
		return x.LowPrice
	}
	return ""
}

func (x *Ticker) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *Ticker) GetQuoteVolume() string {
	if x != nil {
		return x.QuoteVolume
	}
	return ""
}

func (x *Ticker) GetOpenTime() int64 {
	if x != nil {
		return x.OpenTime
	}
	return 0
}

func (x *Ticker) GetCloseTime() int64 {
	if x != nil {
		return x.CloseTime
	}
	return 0
}

func (x *Ticker) GetFirstId() string {
	if x != nil {
		return x.FirstId
	}
	return ""
}

func (x *Ticker) GetLastId() string {
	if x != nil {
		return x.LastId
	}
	return ""
}

func (x *Ticker) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetTickerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickers []*Ticker `protobuf:"bytes,1,rep,name=tickers,proto3" json:"tickers,omitempty"`
}

func (x *GetTickerResponse) Reset() {
	*x = GetTickerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTickerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickerResponse) ProtoMessage() {}

func (x *GetTickerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickerResponse.ProtoReflect.Descriptor instead.
func (*GetTickerResponse) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{12}
}

func (x *GetTickerResponse) GetTickers() []*Ticker {
	if x != nil {
		return x.Tickers
	}
	return nil
}

type GetTickerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *GetTickerRequest) Reset() {
	*x = GetTickerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ohlcv_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTickerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickerRequest) ProtoMessage() {}

func (x *GetTickerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ohlcv_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickerRequest.ProtoReflect.Descriptor instead.
func (*GetTickerRequest) Descriptor() ([]byte, []int) {
	return file_ohlcv_proto_rawDescGZIP(), []int{13}
}

func (x *GetTickerRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

var File_ohlcv_proto protoreflect.FileDescriptor

var file_ohlcv_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6f, 0x68, 0x6c, 0x63, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f,
	0x68, 0x6c, 0x63, 0x76, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xca,
	0x01, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x65, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x42, 0x75, 0x79,
	0x65, 0x72, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69,
	0x73, 0x42, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x22, 0x7a, 0x0a, 0x1c, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x43, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xc0, 0x01, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x48, 0x0a, 0x1d, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x63,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f,
	0x68, 0x6c, 0x63, 0x76, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x07, 0x63, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x22, 0x79, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x22,
	0xcf, 0x03, 0x0a, 0x05, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x6f, 0x70, 0x65,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x30, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x6c, 0x61, 0x73,
	0x74, 0x22, 0x44, 0x0a, 0x1c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x06, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x68, 0x6c, 0x63, 0x76, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x06, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xb5, 0x01,
	0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x51, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x51, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x73, 0x42, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x42, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x61,
	0x6b, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x42, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x42, 0x65, 0x73, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x3d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6f, 0x68, 0x6c, 0x63, 0x76, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x22, 0xfa, 0x04, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x65, 0x64, 0x41, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x41, 0x76, 0x67,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x76, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50,
	0x72, 0x65, 0x76, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4c,
	0x61, 0x73, 0x74, 0x51, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4c, 0x61,
	0x73, 0x74, 0x51, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x69, 0x64, 0x51, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x42, 0x69, 0x64, 0x51, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x73, 0x6b,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x73, 0x6b,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x73, 0x6b, 0x51, 0x74, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x73, 0x6b, 0x51, 0x74, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x48,
	0x69, 0x67, 0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x48, 0x69, 0x67, 0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x77,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x77,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x3c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x68, 0x6c, 0x63, 0x76, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x22,
	0x2a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x32, 0xb1, 0x03, 0x0a, 0x0c,
	0x4f, 0x48, 0x4c, 0x43, 0x56, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x15,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x43,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x6f, 0x68, 0x6c, 0x63, 0x76, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x68, 0x6c,
	0x63, 0x76, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x60, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x73, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x6f, 0x68, 0x6c, 0x63,
	0x76, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x6f, 0x68, 0x6c, 0x63, 0x76, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44,
	0x65, 0x61, 0x6c, 0x73, 0x12, 0x1c, 0x2e, 0x6f, 0x68, 0x6c, 0x63, 0x76, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x68, 0x6c, 0x63, 0x76, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x12, 0x4a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x6f, 0x68, 0x6c, 0x63, 0x76, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x6f, 0x68, 0x6c, 0x63, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x6f,
	0x68, 0x6c, 0x63, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6f, 0x68, 0x6c, 0x63, 0x76, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x6f, 0x68, 0x6c, 0x63, 0x76, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_ohlcv_proto_rawDescOnce sync.Once
	file_ohlcv_proto_rawDescData = file_ohlcv_proto_rawDesc
)

func file_ohlcv_proto_rawDescGZIP() []byte {
	file_ohlcv_proto_rawDescOnce.Do(func() {
		file_ohlcv_proto_rawDescData = protoimpl.X.CompressGZIP(file_ohlcv_proto_rawDescData)
	})
	return file_ohlcv_proto_rawDescData
}

var file_ohlcv_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_ohlcv_proto_goTypes = []interface{}{
	(*SubscribeDealsRequest)(nil),         // 0: ohlcv.SubscribeDealsRequest
	(*SubscribeDealsResponse)(nil),        // 1: ohlcv.SubscribeDealsResponse
	(*GenerateMinuteCandlesRequest)(nil),  // 2: ohlcv.GenerateMinuteCandlesRequest
	(*Candle)(nil),                        // 3: ohlcv.Candle
	(*GenerateMinuteCandlesResponse)(nil), // 4: ohlcv.GenerateMinuteCandlesResponse
	(*GenerateMinuteKlinesRequest)(nil),   // 5: ohlcv.GenerateMinuteKlinesRequest
	(*Kline)(nil),                         // 6: ohlcv.Kline
	(*GenerateMinuteKlinesResponse)(nil),  // 7: ohlcv.GenerateMinuteKlinesResponse
	(*GetLastTradesRequest)(nil),          // 8: ohlcv.GetLastTradesRequest
	(*Trade)(nil),                         // 9: ohlcv.Trade
	(*GetLastTradesResponse)(nil),         // 10: ohlcv.GetLastTradesResponse
	(*Ticker)(nil),                        // 11: ohlcv.Ticker
	(*GetTickerResponse)(nil),             // 12: ohlcv.GetTickerResponse
	(*GetTickerRequest)(nil),              // 13: ohlcv.GetTickerRequest
	(*timestamppb.Timestamp)(nil),         // 14: google.protobuf.Timestamp
}
var file_ohlcv_proto_depIdxs = []int32{
	14, // 0: ohlcv.SubscribeDealsResponse.time:type_name -> google.protobuf.Timestamp
	14, // 1: ohlcv.GenerateMinuteCandlesRequest.from:type_name -> google.protobuf.Timestamp
	14, // 2: ohlcv.GenerateMinuteCandlesRequest.to:type_name -> google.protobuf.Timestamp
	14, // 3: ohlcv.Candle.openTime:type_name -> google.protobuf.Timestamp
	3,  // 4: ohlcv.GenerateMinuteCandlesResponse.candles:type_name -> ohlcv.Candle
	14, // 5: ohlcv.GenerateMinuteKlinesRequest.from:type_name -> google.protobuf.Timestamp
	14, // 6: ohlcv.GenerateMinuteKlinesRequest.to:type_name -> google.protobuf.Timestamp
	14, // 7: ohlcv.Kline.openTime:type_name -> google.protobuf.Timestamp
	14, // 8: ohlcv.Kline.closeTime:type_name -> google.protobuf.Timestamp
	14, // 9: ohlcv.Kline.first:type_name -> google.protobuf.Timestamp
	14, // 10: ohlcv.Kline.last:type_name -> google.protobuf.Timestamp
	6,  // 11: ohlcv.GenerateMinuteKlinesResponse.klines:type_name -> ohlcv.Kline
	9,  // 12: ohlcv.GetLastTradesResponse.trades:type_name -> ohlcv.Trade
	11, // 13: ohlcv.GetTickerResponse.tickers:type_name -> ohlcv.Ticker
	2,  // 14: ohlcv.OHLCVService.GenerateMinutesCandle:input_type -> ohlcv.GenerateMinuteCandlesRequest
	5,  // 15: ohlcv.OHLCVService.GenerateMinutesKlines:input_type -> ohlcv.GenerateMinuteKlinesRequest
	0,  // 16: ohlcv.OHLCVService.SubscribeDeals:input_type -> ohlcv.SubscribeDealsRequest
	8,  // 17: ohlcv.OHLCVService.GetLastTrades:input_type -> ohlcv.GetLastTradesRequest
	13, // 18: ohlcv.OHLCVService.GetTicker:input_type -> ohlcv.GetTickerRequest
	4,  // 19: ohlcv.OHLCVService.GenerateMinutesCandle:output_type -> ohlcv.GenerateMinuteCandlesResponse
	7,  // 20: ohlcv.OHLCVService.GenerateMinutesKlines:output_type -> ohlcv.GenerateMinuteKlinesResponse
	1,  // 21: ohlcv.OHLCVService.SubscribeDeals:output_type -> ohlcv.SubscribeDealsResponse
	10, // 22: ohlcv.OHLCVService.GetLastTrades:output_type -> ohlcv.GetLastTradesResponse
	12, // 23: ohlcv.OHLCVService.GetTicker:output_type -> ohlcv.GetTickerResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_ohlcv_proto_init() }
func file_ohlcv_proto_init() {
	if File_ohlcv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ohlcv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeDealsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ohlcv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeDealsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ohlcv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMinuteCandlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ohlcv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Candle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ohlcv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMinuteCandlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ohlcv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMinuteKlinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ohlcv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ohlcv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMinuteKlinesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ohlcv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ohlcv_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ohlcv_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastTradesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ohlcv_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ohlcv_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTickerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ohlcv_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTickerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ohlcv_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ohlcv_proto_goTypes,
		DependencyIndexes: file_ohlcv_proto_depIdxs,
		MessageInfos:      file_ohlcv_proto_msgTypes,
	}.Build()
	File_ohlcv_proto = out.File
	file_ohlcv_proto_rawDesc = nil
	file_ohlcv_proto_goTypes = nil
	file_ohlcv_proto_depIdxs = nil
}
